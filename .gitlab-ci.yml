stages:
  - build
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"
  CI: "gitlab-ci"
  PRODUCT: Writerside/pd
  WRS_VERSION: 2.1.1479-p3869
  ARTIFACT: webHelpPD2-all.zip
image: docker.io/library/gradle:8.2.1-jdk17

cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - .gradle

.build_release:
  stage: build
  coverage: '/    - Instruction Coverage: ([0-9.]+)%/'
  tags:
    - saas-linux-medium-amd64
  only:
    - main
  artifacts:
    when: always
    paths:
      - build/distributions/*.zip
      - build/reports/tests
      - build/reports/jacoco/test
    reports:
      junit: build/test-results/test/**/TEST-*.xml
    expire_in: 360 days

.build_artifact:
  stage: build
  coverage: '/    - Instruction Coverage: ([0-9.]+)%/'
  tags:
    - saas-linux-medium-amd64
  only:
    refs:
      - merge_requests
  artifacts:
    when: always
    paths:
      - build/distributions/*.zip
      - build/reports/tests
      - build/reports/jacoco/test
    reports:
      junit: build/test-results/test/**/TEST-*.xml
    expire_in: 7 days

build_artifact:
  extends: .build_artifact
  script:
    - gradle test
    - gradle -Dversion.prerelease=$CI_PIPELINE_ID-SNAPSHOT buildPlugin

release_artifact:
  extends: .build_release
  script:
    - gradle test
    - gradle buildPlugin


build-documentation:
  image: registry.jetbrains.team/p/writerside/builder/writerside-builder:$WRS_VERSION
  stage: build
  only:
    refs:
      - merge_requests
      - main
#    changes:
#      - Writerside/**/*
  script:
    - set -e
    - export DISPLAY=:99
    - Xvfb :99 &
    - /opt/builder/bin/idea.sh helpbuilderinspect -source-dir . -product $PRODUCT --runner gitlab -output-dir public/
    - echo "Test existing of $ARTIFACT artifact"
    - test -e public/$ARTIFACT
  artifacts:
    paths:
      - public/
      - public/$ARTIFACT

pages:
  stage: deploy
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add zip
  script:
    - cp -R build/reports/jacoco/test public/
    - mv public/test public/coverage
    - cp -R build/reports/tests/test public/
    - mv public/test public/testreport
    - cd public
    - unzip $ARTIFACT
  artifacts:
    paths:
      - public